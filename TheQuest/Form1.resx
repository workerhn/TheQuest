<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQCAMAAABF6+6qAAAABGdBTUEAANbY1E9YMgAAAd1QTFRFmZmZ
        zMzM69qzAAAAmWYAZmZmpqamOzctJiYmMzMzc3NzTU1NzJkzdm1asKSGTTMADQ0Nv7+//8wAJhoAc00A
        /2YAgICAmXMmjIyMs7OzWVlZDw4LMyYNLCki3Myok4hwhHtlSUQ4v7GRzr+dWFJDHRsWCgoKZgAAv48w
        j4+PZ19OGhoaExMTopZ7OTk5QEBAMDAwHR0dYGBgpnwphoaGVlZWs4YtWUMWQ0NDc1YdEw0AGgAAMwAA
        aWlpfHx8Qy0Av00AfFMAHRMAaUYA/4AAEAYAQBoAMBMAOSYA72AA/7MA/4wAhlkA/8YAj2AAVjkAz1MA
        IA0ADQoDYCYAJh0K/6YAr0YAYEAAjGkjMCAAgDMAZk0aCgYA/78AgGAg/3kATTkT/5kAUCAAs4AAv4wA
        /3MAn0AA2aYA31kAGhMG/5MAcC0A+cYA0p8A/4YAv5kA/2wAn2wA5rMA/7kA8r8AzJkAQDAQQDMApnMA
        7LkAuYYAQDAAEwAA36wA/58AgGAAIBgABgAAUwAAYEgAjzkAxpMAmXMAj2sAQCYATQAAcFQAYAAAz2AA
        IAAAQAAAMCQAJgAAv48AMyYA758ALSAAUDwAGhYQv4YAgFMAn3MAQCAArHkA/6wAv1MAWQAArtkoPgAA
        ABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABn4SURBVHhe7d2HexrHvsZxpDF1WUQR
        siRCE+VKoB7JkX2OSxxLLokTdztOfNJ77zknOb3c3nv9W+/M7ix1F7YwCwPv53kSIYQkW3y9v9ldBIEd
        JQQwYspOQIlEVuYARmglElECwbnV5DK/AmAElpOrc0EalnYBYES0DZUWFtt0YRzCSPCW9LB4ZQBeGdPP
        CAvjUEoryQC/NCFaG6hWWBiHMtq5GuWXJkJHQ+2wMA7ls0KuH3duDUL87Zh0Tr3OsDAOZRN7M3u3ff+t
        KKTjzvRf14apKyyfx+FS1Ksl/pVmVeQ/rzxo8ssBhdx9kOTvjEFPO91h+TsOg6+f9ubeLI7uIBMI0EX7
        SvD2k19lrwZTc6ElpXn78fvZ7O2xreV7p11vWH6Ow+ArcU/WCf9CsySVvPr48d2Tk6uEHL/5N+mvsrfe
        JOT2yeNbWerW2LZYfRukvrB8HIc0rEevxJ95at3Nf+vx+KMd/oVmSij5LmtI83w6/Y5x8Uo2e/12jN/I
        ZybN9Ifl3zgMPhM/80H8zNNxN//dOx1/fUw/xjELJR9k37j/xodXrnz6JJ2+/072nSsf3r+Z/p9s9k2F
        38RnZlPOLCy/xuFKkjbi1uvx+B0fdzQmydLxLbqp0r33Mb+QfoMOwhS/hb9MN0SmYfk1Dpc/oAONLrTO
        PuXQz1haT0f4l5k5sePrr93Uc3rrS/0t7Sp7qblEF/V+H8uyaMU8LL/G4eq38fi9s/H1O2pCkyeE5MPh
        cFVV1XKOvhMuh8P0DSH6x7na03G6rXtldg+6KSfZ1/Sevv+E/u89OhHZOusPJyfHxOeFZ8BiulmFRceh
        xQdGKnJWm2unc4V5plIqE/KbX//6X3/44Te///N/fPL3P/z+139FSLmU0D7MVe7E42Q9fm/CTpP5KBV5
        nP0w/cn3b7116otvfvHFqXT6yY0bX331+fWPkj6vO4NJi2OJlmHNhSJR8SNbW2adWY+/EubRzLPtlJla
        eIvfYr5I11evxM+M8WDg2IXI+9kb6bdO6d7WNl73P39wvOPvsjMVjVhNXuuw5lKKD6fOl++tx5+hA/Ep
        lVejkrBKh2GNlBNFtRoON+j7arWh5sL6Ro0qa0usn41pF2gyrN7Nfpr++gs9rF9+8vN0+sPsRz4e3NYE
        korltmdAWHT3w4dxqLweX6dbrfU7azwbmlCxME/CWxX2Hl1QEfqmouba05COQZrWtzN9PieVfD97M/1H
        PSy2yXr++olfxx8NlmOQGRiWH+MwFdG2P/FHNWOLVCjlSb49EXN5tcy2X/yj8/NbT8WfpqusO+PZt54U
        ykd0Fv5c7+ot2lX2JOLvD2TAGGQGh+XHOAz929Px0x/QgVjm4VSKDbYn+ONPDL9ly3dt+6Vp0N3IR/FH
        M3uwQRe4SsNKa1198XH6V9l3fe5q0BhkhoTlxzhcosuss+vx+L2S1k2J/O1P//J3f9bld3/3D781upuv
        aYdVn5nBw+4rgQ7k0r9/9tki86fPPvvfS1fZiWmD+GNZA8cgMzQsH8bhzjPaMDyjL7MaP/4fz6nLX/8Y
        1ldhax/E18/G4x+M+UFt4xDQFwfDiV5+DhmDzPCwxI/DVPMR3S18Ov6I/1h+8tNufCLyj5Jn4qfvxc8Y
        D0OaKTH+IxgsKfrf3LAxyNgIS/w4DN05E/+Zvoa3Zf1M/OxsHmxQeDuDCO9q6BhkbIUlfBzG7vFkbPvW
        50M2EyIV4fVYE92VjTHI2AtL+Dhky6zT5Kzt/9aJv/tAE2MlyfuxIrorO2OQsRmW6HGYap7mmyJ7ZvMx
        fkyIB2RBdFe2xiBjOyzB4zBwZ503Y8uMPsaPWeIJmRLclc0xyNgPS/A4DPIfjU0z+hg/ZpX/CEw0xXZl
        dwwyDsLy42Ap2GC5ayj44LvtMcg4Csufh9LAEFa7hmK7cjAGGWdh+fNQGhjCvCyx/+adjEHGYVgYhxMh
        ZHLQQewRY0djkHEcFsbhJOgvS+g/d4djkHEeFsbhJOgtS+hpZ6djkHERFsbhJOgqS+zhK8djkHEVFsbh
        BOgoS+juoIsxyLgLC+NwAoSavCuhv1/pZgwyLsPCOJwAqSjLqin0X7irMci4DgvjcAIsCX7uOZdjkHEf
        Fsbh1HM7BhkPYWEcTjnXY5DxFBbG4RTzMAYZb2FhHE4tL2OQ8RgWxuGU8jQGGc9hYRxOIY9jkPEeFsbh
        1PE6BpkRhIVxOGU8j0FmJGFhHE6REYxBZjRhYRxOjVGMQWZEYWEcTomRjEFmZGGxccifRAekNZoxyIwu
        rLnUzmYEpLY5uqXyCMOaCyq8e5CUMsIYEBa0ICwQAmGBEAgLhEBYIATCAiEQFgiBsEAIhAVCICwQAmGB
        EAgLhEBYIATCAiEQFgiBsEAIhAVCICwQAmGBEAgLhEBYIATCAiEQFgiBsEAIhAVCICwQAmGBEAgLhEBY
        IATCAiEQFgiBsEAIhAVCICwQAmGBEAgLhEBYIATCAiEQFgiBsEAIhAVCICwQAmGBEAgLhEBYIATCAiEQ
        FgiBsEAIhAVCjCusFfbNrV/cFWHJbhxhrcSipM5eN5iQaHCZX9kNYcnO/7BC0fr2+Q39ux9E9vaSiklb
        CEt2vocVrCu8KkZRAgeHm8ngCv+oAWHJzuewUpHNA/6dNfu77P+xbaJ0p4WwZOdvWKnIbr0rrFhEf3vQ
        kxbCkp2/YUW2A0c8Jd0G4RdYWqvtvUSEJTtfw1qlUW1sHvJvrSHtBddBJLnEb4iwpOdnWIE6qyjWNQz3
        YvwCQ+rRkH5ThCU7H8NKNc9r3/JIW7BzkX1+gYnEFBLU5iHCkp2PYQX56mqjrgemUToL2j6k87AZYLdF
        WJLzL6xU8gL/nue1kag73OYXGK2ywzpdxCMs2fkXlnFkgdplw/D8UYQwe7uKsc46r93kIBIJISzZ+RdW
        s71M36jHlLpWlWF3X1vXb+ofPyQRhCU538IK8Gg0h7ynTts0POOo1oU9hCU538JSOg5f7fOWeuztbxrL
        sK41PUjIYVip3rPFHQaHlWyv0i26YoyeEJbsHISVWl6NkAE3HxhWYG8vwvcFL/CITG3qx7UQluxshqVF
        lVlYXHAb1urRxrY+6DY2eUMWImyRj7BkZyMsI6pTlOuwWC6HdbY5OuIBWds+QFjSGxJWZ1SM27BS2v7e
        +boSOOD1DFJXEJbsBoTVGxXjNqyAfnT0wt7uLo9nCIQlOYuwzKJi3IYVPNK/3YbNrhCW7EzCsoqKcRvW
        jvEgBrNDo2YQluR6whoUFeM2LG1Xj9nj4QyDsCTXEdawqBi3YRnnauws3TUIS3I8LC2qy4OjYlyGFTJO
        FA446N4NYUmOhqVHdfG5F3k8g7gMi+8UBgLbvJuhEJbklIjNqBafW7iYOefylE7MOFE45Kh7G8KSnJIZ
        EtWziy8tZDKEXM4sLCy6PaVjPG5vg2czHMKSnLLAA+r14uLDhWuZV8m5zLWF5xaN+FyGZTxmJsazGQ5h
        Sa4/LLpZupi5TEjm5YWXFp/lVxpchhXlRxvsHsVCWNJrh/UCnXkvazPvIp15/MpebsMiu9oRUoVnMxzC
        kpyy8CJdll+jy/JX6cx7uPgCL8iCy7CSscO9+nYsYPeEDsKSHt2GZDImM8+Cy7DY8dGDo83N7t+gGARh
        Sc5y8W7OQ1iU/bU7wpKdr2EFeDU2ICzJISwQwpewAnv8u/FqbEBYkrMV1guLdM9xYeHlTOacu7CMpwPh
        1diAsCRnFdbi4uLDhYWLGXY2h7xK39CwHi4uXvMUFhbvs6Md1ou0JX2zdJnesZczmZfpe/S6riNbLkch
        wpo5Ct0U0e3Rq/S+pG8uLiy8RFviFZlAWGAPC+u5ns3SAAgL7PFnrxBhzRyEBUJYhfUsW3Hxyx28hTXw
        6UC6ISzJWR5uoHduhl/u4C0sHCCdHRZhLeh3b9/+ocuwjF/S0b+qHQhLcn1hPaQzMJM5p9+9l3unobuw
        cK5w9rDDDV3Ykfa2c/xaQwZhgS0+hrWxb/f36ymEJbm+UchXV1zv+t39KNzfJbsOykJYkusL64VF5pp+
        9740ot/Sae7W9w4P7DybnwFhSc5ir/AhOxH9aqbvkfAuw4pu66/4hd/SmRkWYY32OFbr9wrP69XYgLAk
        ZxUWexCNyW/uuAxrlXdi+1mMEJbsrMKy4DKs1msu8WyGQ1iS8yesJeO1L/UX/LIBYUlOOddxIOs5bY+Q
        sXoGGpdhtU4W2l69IyzJKdfYr0lw2tkcDb97qXP8mkzmGruFu7D0p3mnbD++AWFJbugofJZvwxYXX3If
        1lzrxert/pI9wpKcP2us1vEG288VibAk51NYxvEG289ui7Ak51NYxm7hPrE1C4+OEJbkfAqLPx/3dv2C
        jU1W/Txe/Ut6PoU1lzwIBDb29ugafugjHHbpjRCW7PwKa+cwcKGuPSn3kF/V2dSW+QhLdtoB0pds/8aq
        67CWdvcJf6GmQQdJ6zwohCU77QDpNe137C9rv2Jveu65xXVYKVI3XqF+wDOR0tWVDmHJrmMUas9VdFH7
        RYpzVo25Dmsuyp/qndqwOGO4fVDXH7YVONhDWJIzX2M9y554ptXYNe0sovYB92G1zkMzJodJ60c0Kn7m
        50I9ibAkN3TxrjW2oD230atun3iNSbH9QkNkt+dFdfSngY/pz/wXq8daj7MBSTnZK3xhcfFl12HNKfzV
        e6nzmxuB2LbR1t72Pj+TeF57EMRhcqn9AC6QlJJ5aPkYGRPuR+HcSt04Eb3B1+gbsVhMMR5Qw7D2Nrab
        Ifq1EJbklOhOlLDXzRn6ohQaD2G1N1m7Hcutrt2/IyVwYS+aordFWLLTXmE1FVgKsr4us9eoGNiXl7BW
        kvoBh/OtTRe13d5ZpEuv2CF/QUSEJbvOFxtPBZaDSjQ5qC8vYc0FtbX5xqZxsIppvQo5s7nJxqB2U4Ql
        uc6wDLyvc+xlwHqOZHkKay7KhuFR56oq0D5sSv8sZJWNQQZhyc4sLI72tRptdvflLaxUcj8QMw6C6ozH
        LAcCsc0I31xRCEt2A8LiQgHeF3ulVW9hzYWSh5udiypak3EhklziN2IQluyGh8VpfUVcvth4SyhplKSL
        6XORZhU0pqAGYcnOdljD2QlrbiWy17lc145c7W82u7NCWPLzO6y5uVgy0t4tPNre3yU7nUNQh7Bk539Y
        c6lYhEQU5fBQUSL15M7SCr++E8KS3RjColaWg8EdJRhcbu8HdkNYshtPWEMhLNkhLBACYYEQCAuEQFgg
        BMICIRAWCIGwQAiEBUIgLBACYYEQCAuEQFggBMICIRAWCIGwQAiEBUIgLBACYYEQCAuEQFggBMICIRAW
        CIGwQAiEBUIgLBACYYEQCAuEQFggBMICIRAWCIGwQAiEBUIgLBACYYEQCAuEQFggBMICIRAWCIGwQAiE
        BUIgLBACYYEQCAuEQFggBMICIRAWCIGwQAiEBUIgLBBiUsPajoHUticyrKVkFCSXXOJ3pmcjCyulJAP8
        IkgrkFRS/KJHoworFImO6E8E45SKRkL8ojcjCmspObrpDGMVHM04HElYGIPTZDTjcBRhYQxOl5GMwxGE
        hTE4dUYwDj2HhTE4jbyPQ69hYQxOJ8/j0GNYGINTy+M49BSWP2MwFcA2cRy8jUMvYfkyBlPBJMFmcSw8
        jUMPYfkyBgNNwkSw0RoHD+PQdVj+jMGglhWVHM2JBnDG/Th0G5Y/YzDKs6JQ1li4Hocuw/JlDIb0Mcih
        rPFwOQ5dheXPGFxO8qQ4lDUe7sahm7D8OSi6xHtqQ1nj4WocugjLn4Oiq7ymTk3sG46Hi3HoOCyfzg0q
        vKVuOOowJs7HodOw/BmDKfOuCInyG4DPHI9Dh2H5MwZTEd5RP4XfBPzmcBw6CsunMTigK0I8nRkFD5yN
        Qydh+fQQmYFdEbLMbwZ+czQOHYTl00NkhnSFgw5j5GAc2g7LpzE4F+o5LNoPu4bjY38c2g3LpzFooytC
        dvhtwX+2x6HNsHwag7a6IsSfPwuYsjkObYXl1xi02RUW8GNlbxzaCcuvMTiX2uHPTcEkr578xXff/UuG
        +qfvvvuv201+PbODZdYY2RqHNsLyawx2SzVvZe+nvz7FfJNOX3mAldXksDEOh4bl2xjsoZxkr6TTv9DC
        epuG9X6SfwAmwPBxOCws38ZgD+Xq9ddupv+odXXq+3T6+extLKwmyNBxOCSs8YzBuZWI1tV7elenTn2Z
        vp99FyegJ8qQcTgwrHGNweXkR9nn0+n01+m39bC+//jm59nbOE04UQaPw0FhjWkMrkRvX/r8Pu0qnf6l
        3hVbZf0q+yCJfcGJMnAcDghrTGMwSE4uZd944/krn6bT37z13pe/PPWLLz9h+4XZuxiGE2bAOLQOa3U8
        YzBEotEmeZzNsmH4Mdts/fd72tbr5mvXr46ldLBGxyG/1MsqrJVIZIVfHIPl21pXurd/rr+9+dqtYyyz
        JkzKqhOLsJaTq/zSWOzczWa1lm7cuPHka3rhxlfs3SuXCB4zM2lWk6bHgczDsrixX5aOr2ezN288/w4d
        iNnsDba+oq5ceSf7Lh6NNXHMN0JmYY13DNLvT27RjmhVty5dunQ9+2H6SZZeuHSJXYuyJo9pLyZhjXkM
        0j/TR7Sg9//wJmlGo+xIafqfr0bYqecmIccnxzhnOHlMJlx/WGMeg1TwcfbSm2RnSftnQJdbT/6jFVMo
        gGdhm0T9G6PesMY9BpnA8UkyaPSzcnz902OMv0nX101PWGMfgxqllRUVefCgyS/CBOuZdN1hjX8M9ovd
        vdu3DIQJ1L1R6gxrEsZgv1QS5wjl0NVPR1iTMQb7LWGFJYuOidcOaxLHIEimvXEywprMMQiyaXXEw5rU
        MQjS4ZNPDwtjEEZG30ixsDAGYZS0nmhYGIMwYnQCBgNNjEEYteVkM8CfDgFgpBAWCIGwQAiEBUJ4CCuh
        K6rOlcPO8e8KchgeFr9fq1oRWkpr8/NF+oH5iVfQ/rjObGl/T4f4z8iRvP7jnUD8DzjM4L+ARVj5slpK
        JCr8DjKRyEkQFjhRKJZz4QJ/x6a1RKlhPkv6w8o3inSTNFQlzy/AzFtT+7de3WHlqkWHyQIwFbXGG+I6
        wwpbVkUXKyW6lGBrbrbWKiYS/AMwMwpsN61BC2io6pbZ/V/M8Y407bDC5rFUimyIal+Ofj19cVulC7dc
        WN3C1m1GFIrVGlt3s4U328SU86RW7bv7C1WeEtMKq8Q/2qVQypOwarqIX9tq5Em5yN+DKVap5vKl3s1O
        Qs3nGr1plXhMlBGW6eZKzVlPR6ZQrNW2+GWYVsVc1fzwwFo513vvN3hOrbBU/oEu5fzwpVQxZ7qpg6lR
        zFlXsNX7sUJrncXDMtsuFfOd17LZSicsf69tLTfgaBfIj3Qtd9gSvtReGxXL/IKhdVBrQFhqg1/Qllp5
        unxv0EV7Xu25rY3NGkiMdBzVXCuzJXw1TPK8tkRYf9vSG5bZKFSNL7mWC29p27ga/XJb5VzX8dOE+fIM
        pkVHGwlCtyosnWKxVtWuKfeE1TcKu7d3Orrs19dPZfaGncFpaF+m1Ln5W8sNGMEgP3oHtzYkYRrCGqnM
        q+p8gb6Zn6+SnrDaBxx4WLlc/zZLVRM1bZMXzpVVlaiNvPYtKvmOL7aVK2KNNdUSYTVvlFUt02VQNdcI
        h9UwHVSVcK3UHVa11jq3Y2yx1vJsznWhC7NCqZarbuVL7LA77Yz2WgqT9uYvEab7mzgZPdXoKqphHFUo
        hHPq2vwaa6GYV6ukUehaY1XC+bXeNRato1irlbrW5fonranhXC4cDrPTOXlSKxeNL1Yo0m9DPwFhTTV2
        b2/ljNMyiaoWA0shX6KjqiOsgsoOmJqExTZRpMxuzbU/iT2uqUj/0zeJ7PpKsZzL6wdPEdZU0yqg0bQO
        lVf0FvR3Wo2sVfX4TMNiW6FyrlYuJbSv0VFjl1KtmifhVoEIa6rxCgrFPN3qdB0PYPTsthp0xaR/zCIs
        Zq1Eu8mFq3Sx3n2SUDsBrY1DttpqQVhTrb15YVMqF250HiWvlGrshHS+0bqqL6zOVKhKoqRWw+HOx9iw
        2UoX8H3RIqyp1j23KlvaQ1sMNZpEsSudYWE5gLCmmtWCyALCAnsQFghRRFgggmr6iCpLCAvsQVggBMIC
        IRAWCDG2sNZq/AJMpbGF5fA4B0gGYYEQCAuEQFggBMICIRAWCIGwQAiEBUIgLBDCa1j8eucQ1nRDWCAE
        wgIhEBYIgbBACIQFQiAsEAJhgRAIC4RAWCAEwgIhEBYIgbBACI9huX9VS4Q13TyG5b4OhDXdEBYIgbBA
        CIQFQiAsEAJhgRAIC4RAWCAEwgIhPIbl7LM7IazphrBACIQFQiAsEAJhgRAIC4RAWCBEqcov2IOwwB6H
        929vWEV+vXMIa7p5DMv1864hrCmHsEAIhAVCICwQAmGBEAgLhBhfWLmyWkpU+HsyKJRKa/zijCm4+Ht7
        DKvAr3euon8Bkg831K2E+Z88oboPd/TY371Wdf83llSllLfagKwldCVVE9bk9PvV4S/J94bFr3ZD/wJt
        +XC4Sv90Rf6HpUr02ga/PNyW/rcbDf1n1IX+eJkaf3dW1Lr+1vyHYAu/n+0RGBZMGUfzc4RhGZtMmFJO
        ziMX+Oe0wvKwmkVYUy7nII4y/5xWWO6PGaj6F4DpZb+sKv8MiodF3O4lsYU5TLlcid/bg1U6dwmMsEjN
        zRGBSnvTB9OsNvxxVZWOzRXVCouOQ6dp9XwpmGa10sCD4Fu9LXSERUh+8Cd3KRRbe5YwG/IWx7krxWr/
        HlxXWFT7kytqyXLdtVZCVbMpX2aHvo0MEgm10TpE3603LCZfLSUqJXr7fH9ZhUSxgahgKLOw2vJqqeNE
        SzWMpMCmwWEBuISwQAiEBUIgLBACYYEAhPw/rloiqDaRYAUAAAAASUVORK5CYII=
</value>
  </data>
</root>